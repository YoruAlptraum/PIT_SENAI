<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>49</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AADW1tYBzMzMAf///wAzMzMNDAwMLwEBAVgEBAR8BAQElgICAqEBAQGnBAQEpgMDA58BAQGPBAQEcwgI
        CE8JCQkiAAAABP///wGrq6sEhYWFAZ2dnQOzs7MEm5ubAoqKigGpqakEqqqqBIeHhwGcnJwDs7OzBJ+f
        nwO3t7cA1tbWAQAAAAAmJiYRCQkJWwEBAZYDAwOcBwcHkQQEBH8BAQFmBwcHbggICHYCAgJyBAQEZggI
        CHMFBQWDAQEBkQQEBJ4HBweLBAQEQCoqKgZ0dHQJfHx8BcrKygB5eXkGcXFxCZCQkAKOjo4CcXFxCXp6
        egbDw8MAioqKBZOTkwbBwcEBDAwMCwcHB2sGBgZ9AwMDRwMDA3gFBQWwAwMDygEBAW0EBASvBAQE6gEB
        AekCAgKDBgYGlgMDA8QBAQGhBwcHYwkJCVgCAgKFBQUFT2BgYAlZWVkHUVFRAllZWQhcXFwJVFRUBFVV
        VQRdXV0JWVlZB1FRUQJjY2MHhoaGB6CgoAMrKysOAgICVwEBAbIICAhyAwMD1gAAAP8CAgL/CAgIiAEB
        AcUAAAD/BAQE/wUFBZMAAACzAgIC/wQEBP8CAgKkAAAAiQUFBaMMDAxBFBQUAVZWVgVVVVUNVVVVBFVV
        VQFVVVULVVVVClVVVQBVVVUEVVVVDVZWVgXCwsIAuLi4Aw0NDR0CAgLMAgIC/wUFBXkDAwPUAQEB/wIC
        Av8EBASFAwMDxQICAv8CAgL/BAQElQICArQCAgL/AgIC/wMDA6UDAwOiAgIC/wQEBJpAQEAGV1dXB1VV
        VQdUVFQHVFRUBV1dXQeenp4Era2tAp+fnwNra2sGWlpaB4ODgwOoqKgDAQEBLAQEBOUEBAT+AAAAdgEB
        AdMEBAT/AgIC/wAAAIIEBATDBAQE/wAAAP8CAgKUBgYGtQICAv8AAAD/BAQEqAYGBqYAAAD/AQEBuTs7
        OxRaWloGVVVVAFVVVQhYWFgMDQ0NCwICAkgJCQl8BgYGXwAAABV6enoFeXl5CpaWlgIJCQktAgIC5QIC
        Av4FBQV5AwMD1AEBAf8CAgL/BAQEhQICAsUCAgL/AgIC/wQEBJQCAgK0AgIC/wICAv8DAwOkAgICoQIC
        Av8DAwO4IyMjCllZWQdVVVUIVVVVBre3twIGBgZmAwMD9QEBAf8CAgL8AwMDuA0NDSn///8BqqqqAwwM
        DC4BAQHlAQEB/ggICH0DAwPVAAAA/wICAv8HBweHAQEBxQAAAP8EBAT/BQUFkwAAALICAgL/BAQE/wIC
        AqMBAQGhAwMD/wQEBLcFBQUGW1tbBVVVVQ1VVVUEAAAAAA8PDzMEBAS8AAAA/wEBAf8EBAT/AgICvQIC
        AiP///8BAwMDLAMDA+QDAwP+AQEBdwICAtQDAwP/AgIC/wEBAYIEBATBAwMD/gEBAf8CAgKTBQUFtQIC
        Av8BAQH/BAQEpwUFBaQBAQH/AgICuTc3NxBZWVkHUlJSAX5+fgUWFhYmAgICpgICAncEBAS5AgIC/wAA
        AP8CAgL/BgYGoC8vLwkDAwMsAwMD5AMDA/4BAQFxAgICpgUFBaoEBASQAgICTAcHB2MGBgZ5AgICdwUF
        BU8JCQllBAQEmQEBAbYFBQWHBQUFoQEBAf8CAgK5Nzc3EFlZWQcAAAAAFRUVHQUFBbABAQH/AQEB5AcH
        B3cDAwO5AAAA/wMDA/8EBATdCAgIJAsLCy8BAQHHAQEBkQsLC1MGBgZ0AAAAlwMDA7cFBQXNAQEB1gAA
        ANsEBATbAwMD1wAAAMUDAwOvBwcHkQMDA2ABAQFZBQUFrgUFBasEBAQHoqKiAyUlJR0CAgKlAAAA/gMD
        A/8DAwP/AAAA5AMDA3UGBga7AgIC/wAAANkPDw8iFRUVEwUFBVcDAwOfAwMD5QICAv0BAQH/AgIC8QQE
        BKEEBASLAgIC0wMDA7gDAwO8AQEB+QICAv8CAgL/AgIC+QICAtUFBQWKCgoKRj4+PgUXFxcXBAQEoQIC
        Av0BAQH/AgIC/wICAv8BAQH/AgIC5gYGBmgDAwO2AwMDjmNjYwcBAQEXBAQEwgQEBP8AAAD/AQEB/wUF
        Bf0DAwONAAAAhAUFBZgODg5IAQEBdQICAnYGBgalAgIC/wAAAP8DAwP/BAQE/wAAAP8BAQGLIyMjIQMD
        A6QAAAD8AgIC/wQEBP8AAAD/AQEB/wQEBP8DAwPGAAAALBkZGRowMDAa////ABISEhQDAwO2AgIC/wIC
        Av8CAgL/AgIC9gUFBXMDAwO6AwMDogcHByoDAwOhAwMDsQMDA3ICAgLyAgIC/wICAv8CAgL/AgIC+AQE
        BKACAgKuAgIC/gICAv8CAgL/AgIC/wICAv8CAgL/AgICtw4ODimMjIwEY2NjBpWVlQOnp6cD////AgYG
        Bh8BAQGCBQUF0AMDA/QAAADfBQUFcQcHB5YCAgJvAQEBfQcHB3sEBASmAAAAewICAvwEBAT8AQEB6AAA
        ALYGBgaSBAQEywAAAP4CAgL/BAQE/wEBAf8AAAD/AwMD/gUFBbUAAABJHR0dC1xcXA1WVlYFw8PDALe3
        twOampoBp6enBW9vbwgLCwsWBwcHPgoKClYEBASPAgICSgQEBJgEBAS8AgICYQMDA4MICAhnBAQEfQIC
        AlMNDQ0xCQkJXAEBAdUBAQH/AwMD/wICAv8BAQH/AwMD/wMDA/8CAgKvAwMDdAQEBN8FBQWDERERCWho
        aAd7e3sHnp6eAqGhoQF6enoHYGBgClpaWgIAAAAACgoKYQUFBWwnJycDMzMzDy4uLhIdHR0HAwMDbAwM
        DE4AAAAAAwMDDwUFBXsDAwPtAQEB/wEBAf8DAwP/AgIC/wAAAP8DAwP/BQUFuQkJCR8CAgJ3BAQE/wIC
        AvQBAQFKzs7OA3p6egicnJwCtLS0BJ+fnwJTU1MCZmZmChMTEygAAACPFBQUG2BgYAtZWVkDY2NjAX19
        fQgMDAw+AQEBVggICD8FBQW6AQEB+wAAAP8DAwP/AwMD/wAAAP8CAgL/BAQE/wICAsMAAAAiJSUlFgUF
        BaEAAAD/AgIC6Q8PD0bu7u4Cra2tALW1tQOqqqoDjY2NBF1dXQVBQUELBQUFfAMDA06Ojo4EVVVVCFZW
        VgW9vb0CYGBgBw0NDTICAgKWAgIC6gMDA/8CAgL/AQEB/wMDA/8DAwP/AQEB/wICAv8DAwPXCgoKNRER
        EREFBQWfAwMD/gEBAesGBgZiTk5OCVxcXAaIiIgCrKysBLm5uQB2dnYIbm5uCgMDAxgDAwNtODg4FXBw
        cAQVFRUANjY2DhEREToBAQGIAQEB3wQEBP4CAgL/AAAA/wMDA/8EBAT/AAAA/wEBAf8EBAT/AgIC6gAA
        AEoeHh4VBwcHoQEBAf4BAQHrCwsLZVFRUQc1NTUAZGRkB3h4eAqXl5cCpaWlA4eHhwVcXFwGQ0NDCTIy
        Mg0eHh4ODw8PLAUFBV8DAwOsAgIC6QICAv8CAgL/AgIC/wICAv8CAgL/AgIC/wICAv8CAgL/AgIC/wIC
        AvkFBQV9EhISHAQEBJ8CAgL+AgIC6wYGBmJISEgFWFhYB1VVVQZbW1sHgoKCBKioqAO2trYEo6OjAVJS
        UgJaWloMKSkpEgAAAIkCAgLmBAQE/AEBAf8AAAD/AwMD/wMDA/8AAAD/AgIC/wQEBP8BAQH/AAAA/wQE
        BP8DAwP/AAAArQMDA4EFBQXPAQEB/AAAAOsJCQljXFxcCgAAAABVVVUEVVVVDlZWVgXS0tIAt7e3A5+f
        nwF+fn4GXl5eCFdXVwNiYmIFDQ0NQAMDA9MBAQH/AwMD/wMDA/8BAQH/AgIC/wMDA/8CAgL/AQEB/wIC
        Av8DAwP/AQEB/wICAt0ICAhZAwMD2gEBAf8DAwPrCAgIYkFBQQRZWVkEVVVVClVVVQhUVFQCX19fCHt7
        ewegoKADoaGhAXp6egdgYGAJVFRUAlZWVgR0dHQJCQkJOgAAANADAwP/AwMD/wEBAf8BAQH/BAQE/wIC
        Av8AAAD/AwMD/wMDA/8BAQH9AwMDdz09PRAFBQVzAAAAuwcHB11aWloKZmZmAlVVVQNVVVUMVVVVCFJS
        UgFiYmIHenp6CZycnAKysrIEnJycAlRUVAJVVVULVVVVCFpaWgGVlZUEERERPgEBAdABAQH/AwMD/wMD
        A/8AAAD/AgIC/wQEBP8BAQH/AAAA/wQEBMsbGxsfAAAAAEFBQQYzMzMUSkpKBFdXVwFVVVUKVVVVClVV
        VQFVVVUFVVVVDFdXVwWjo6MBtLS0A6ysrAOQkJADWFhYBFVVVQlVVVUIVVVVA1VVVQd+fn4GCAgIOQEB
        AdADAwP/AwMD/wEBAf8CAgL/AwMD/wICAv8BAQH7BwcHZpKSkgVUVFQDV1dXB1paWghWVlYGVVVVA1VV
        VQhUVFQIVFRUA1RUVAZVVVUJWVlZB4qKigKurq4EysrKAHV1dQhhYWEKUVFRAVVVVQNVVVUOVVVVBpSU
        lAB9fX0HEBAQPQAAAM8BAQH/BAQE/wICAv8AAAD/AwMD/wUFBcsFBQUWubm5AVVVVQ1VVVUHVVVVAFVV
        VQhVVVUNVVVVAlRUVAJUVFQNVFRUB3x8fABkZGQHeHh4CpeXlwKmpqYChoaGBVtbWwZVVVUGVVVVB1VV
        VQZVVVUHVFRUBlVVVQeXl5cECgoKOQMDA9ACAgL/AgIC/wICAv8CAgL/BAQEepubmwNVVVUHVVVVBlVV
        VQdVVVUFVVVVB1VVVQZVVVUHVFRUB1RUVAZUVFQHVVVVBltbWweCgoIEpqamBLe3twSnp6cBUlJSAVVV
        VQxVVVUJUlJSAFVVVQZVVVUOVVVVA1hYWAFycnIJDg4OOwAAAM8CAgL/BAQE/wEBAecBAQEvb29vCVVV
        VQpWVlYAVVVVBVVVVQ5VVVUEVlZWAFVVVQtVVVULVVVVAFVVVQRVVVUOVlZWBOLi4gC6uroDn5+fAouL
        iwZmZmYHVFRUBFdXVwZhYWEIWVlZB1NTUwNcXFwIXl5eCFVVVQS0tLQDDg4OOgMDA9ABAQH/BAQEtjIy
        Mg9hYWEEVlZWBWBgYAhaWloHU1NTA1tbWwdgYGAIVVVVBVZWVgVgYGAIWlpaB1NTUwNjY2MHi4uLBqSk
        pAP///8AmJiYBYaGhgefn58BioqKA3V1dQmCgoIE39/fAHt7ewd3d3cJn5+fAY2NjQKrq6sHDAwMNwAA
        AM8GBgZ8w8PDBZaWlgGLi4sCdXV1CX5+fgX///8Afn5+Bnd3dwmXl5cBkZGRAnZ2dgl+fn4G////AJCQ
        kAWYmJgHv7+/Adra2gHKysoBnZ2dArW1tQOqqqoDjY2NAaampgO3t7cDnp6eApiYmAGzs7MDrKysA5yc
        nAEAAAAACAgINwcHBy4AAAAAsbGxBK2trQOQkJABoqKiA7i4uAOgoKADlZWVAbGxsQOurq4DkpKSAaKi
        ogO4uLgDp6enA729vQDa2toBIAAAAoAABAgAAAAAAAAAIgAAAAAAAAQAAAAAAAAAAQAAAAAAAAAEAAAA
        AAAAAAAAAAAAAQAAAAAAAAACAAAAAAgEAAAAAAACAAAAAIEAAAgAAAAAAAAAIgAAAAAAAAAAAAAQAAAA
        AACBAAQIAAAAAAQAESIAAAAAgQAECAAEgAI=
</value>
  </data>
</root>